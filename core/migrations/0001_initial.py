# Generated by Django 3.2 on 2021-09-05 17:54

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Country',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='customerRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reg_no', models.BigIntegerField(null=True)),
                ('name', models.CharField(max_length=122, null=True)),
                ('email', models.EmailField(blank=True, max_length=122, null=True)),
                ('phone', models.CharField(max_length=122, null=True)),
                ('other_phone', models.CharField(blank=True, max_length=122, null=True)),
                ('registration_type', models.CharField(choices=[('', 'Please Select'), ('Residential', 'Residential'), ('Commercial', 'Commercial'), ('Other', 'Other')], max_length=122, null=True)),
                ('role', models.CharField(choices=[('customer', 'customer'), ('admin', 'admin'), ('technician', 'technician')], default='customer', max_length=122, null=True)),
                ('business_name', models.CharField(blank=True, max_length=122, null=True)),
                ('country', models.CharField(max_length=122, null=True)),
                ('divison', models.CharField(max_length=122, null=True)),
                ('district', models.CharField(max_length=122, null=True)),
                ('upazila', models.CharField(max_length=122, null=True)),
                ('post_office_or_union', models.CharField(max_length=122, null=True)),
                ('house_info', models.CharField(max_length=122, null=True)),
                ('nid', models.CharField(blank=True, max_length=122, null=True)),
                ('picture', models.ImageField(blank=True, null=True, upload_to='image')),
                ('active', models.BooleanField(default=False, null=True)),
                ('date', models.DateField(auto_now_add=True)),
                ('user', models.OneToOneField(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Upazila',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('district', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.district')),
            ],
        ),
        migrations.CreateModel(
            name='ServiceRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('servicereq_no', models.CharField(max_length=122, null=True)),
                ('title', models.CharField(max_length=250, null=True)),
                ('details', models.TextField(max_length=1000, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to='service_request_file')),
                ('priority', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=122, null=True)),
                ('created_at', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('new', 'New'), ('in_progress', 'In Progress'), ('waittingoncustomer', 'Waitting on Customer'), ('fixed', 'Fixed'), ('closed', 'Closed'), ('cancelled', 'Cancelled')], default='new', max_length=122, null=True)),
                ('customer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('technician', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='technician', to='core.customerregistration')),
            ],
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tech_charge', models.FloatField(max_length=250, null=True)),
                ('details', models.TextField(max_length=1000, null=True)),
                ('equip_charge', models.FloatField(blank=True, max_length=250, null=True)),
                ('files', models.FileField(blank=True, null=True, upload_to='invoice_file')),
                ('created_at', models.DateField(auto_now_add=True)),
                ('status', models.CharField(blank=True, choices=[('Paid', 'Paid'), ('Unpaid', 'Unpaid')], default='Unpaid', max_length=122, null=True)),
                ('service', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='core.servicerequest')),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('country', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.country')),
            ],
        ),
        migrations.AddField(
            model_name='district',
            name='division',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='core.division'),
        ),
    ]
